@using Microsoft.AspNetCore.Components.Authorization
@using Vives.Presentation.Authentication
@using VivesRental.BlazorApp.Security
@using VivesRental.Sdk // Voor toegang tot AuthSdk
@attribute [Route(AppRoutes.Account.SignIn)] // Verbindt deze pagina met de route `/account/sign-in`.

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IBearerTokenStore TokenStore
@inject AuthSdk AuthSdk // Injecteer AuthSdk voor authenticatie.

<!-- Container voor inloggen -->
<div class="signin-container">
    <h2>Inloggen</h2>
    <div>
        <!-- E-mailadres invoerveld -->
        <input type="text" @bind="Email" placeholder="E-mailadres" />
        <!-- Wachtwoord invoerveld -->
        <input type="password" @bind="Password" placeholder="Wachtwoord" />
        <!-- Inlogknop -->
        <button @onclick="Login">Inloggen</button>
    </div>
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <p class="error-message">@ErrorMessage</p> <!-- Foutmelding weergeven -->
    }
</div>

@code {
    private string? Email { get; set; } // Ingevoerd e-mailadres.
    private string? Password { get; set; } // Ingevoerd wachtwoord.
    private string? ErrorMessage { get; set; } // Voor het weergeven van foutmeldingen.

    // **Login**: Handelt het inlogproces af en stelt de authenticatiestatus in.
    private async Task Login()
    {
        // Controleer of de invoervelden zijn ingevuld.
        if (string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(Password))
        {
            ErrorMessage = "Vul alle velden in.";
            return;
        }

        try
        {
            // **Gebruik AuthSdk voor authenticatie**:
            var token = await AuthSdk.AuthenticateAsync(Email, Password);

            // Controleer of de token leeg is (mislukte login).
            if (string.IsNullOrWhiteSpace(token))
            {
                ErrorMessage = "Ongeldige inloggegevens.";
                return;
            }

            // **Token opslaan**:
            TokenStore.SetToken(token);

            // **Authenticatiestatus bijwerken**:
            ((TokenAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser();

            // **Navigatie naar Dashboard**:
            NavigationManager.NavigateTo(AppRoutes.Dashboard.Index);
        }
        catch (Exception ex)
        {
            // Toon een generieke foutmelding als er iets misgaat.
            ErrorMessage = "Er is een fout opgetreden tijdens het inloggen.";
            Console.Error.WriteLine(ex);
        }
    }
}
